package produto;
/**
 *
 * @author JSQLGen
 */
public class ProdutoForm extends javax.swing.JDialog {
    private final java.sql.Connection connection;
    private Produto produto;

    /** Construtor do form ProdutoForm
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param produto Objeto a ser editado
     */
    public ProdutoForm(java.awt.Window parent, java.sql.Connection connection, Produto produto) {
        super(parent);
        this.connection = connection;
        this.produto = produto;
        initComponents();
        obj2form();
        this.setVisible(true);
    }

    /** Exibe caixa de diálogo para preenchimento dos campos
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param produto Objeto a ser editado
     * @return the produto
     */
    public static Produto showInputDialog(java.awt.Window parent, java.sql.Connection connection, Produto produto) {
        return new ProdutoForm(parent, connection, produto).produto;
    }

    /** Transfere os dados do objeto para o formulário */
    private void obj2form() {
        tId.setText(produto.getId()==null?"":produto.getId().toString());
        tNome.setText(produto.getNome()==null?"":produto.getNome());
        tCodBarras.setText(produto.getCodBarras());
        cCategoria.setSelectedIndex(produto.getCategoria());
        tQuantidade.setText(""+produto.getQuantidade());
        tValorCusto.setText(produto.getValorCustoF());
        tValorVenda.setText(produto.getValorVendaF());
        lFoto.setIcon(produto.getFoto());
    }

    /** Transfere os dados do formulário para o objeto */
    private void form2obj() {
        produto.setId(tId.getText());
        produto.setNome(tNome.getText());
        produto.setCodBarras(tCodBarras.getText());
        produto.setCategoria(cCategoria.getSelectedIndex());
        produto.setQuantidade(tQuantidade.getText());
        produto.setValorCustoF(tValorCusto.getText());
        produto.setValorVendaF(tValorVenda.getText());
        produto.setFoto((javax.swing.ImageIcon)lFoto.getIcon(),200);
    }

    /** valida os dados do formulário */
    private String validateForm() {
        String fieldError ="";
        if(tNome.getText().length()<1) fieldError +="Nome\n";
        if(tCodBarras.getText().length()<1) fieldError +="CodBarras\n";
        if(cCategoria.getSelectedIndex()==-1) fieldError +="Categoria\n";
        if(Integer.parseInt(tQuantidade.getText())<0) fieldError +="Quantidade\n";
        if(new java.text.DecimalFormat("#,##0.00").parse(tValorCusto.getText(),new java.text.ParsePosition(0)).floatValue()<0) fieldError +="ValorCusto\n";
        if(new java.text.DecimalFormat("#,##0.00").parse(tValorVenda.getText(),new java.text.ParsePosition(0)).floatValue()<0) fieldError +="ValorVenda\n";
        return fieldError;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        pData = new javax.swing.JPanel();
        tbData = new javax.swing.JTabbedPane();
        pButtons = new javax.swing.JPanel();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        tId = new javax.swing.JLabel();
        tNome = new javax.swing.JFormattedTextField();
        tCodBarras = new javax.swing.JFormattedTextField();
        cCategoria = new javax.swing.JComboBox(Produto.CATEGORIA);
        tQuantidade = new javax.swing.JFormattedTextField();
        tValorCusto = new javax.swing.JFormattedTextField();
        tValorVenda = new javax.swing.JFormattedTextField();
        pFoto = new javax.swing.JPanel();
        lFoto = new javax.swing.JLabel();
        pFotoButtons = new javax.swing.JPanel();
        bFotoPaste = new javax.swing.JButton();
        bFotoSave = new javax.swing.JButton();
        bFotoRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulário de Produto");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pData.setLayout(new java.awt.GridLayout(5, 0));
        tId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tId.setBorder(javax.swing.BorderFactory.createTitledBorder("Id"));
        pData.add(tId);
        tNome.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));
        pData.add(tNome);
        tCodBarras.setBorder(javax.swing.BorderFactory.createTitledBorder("CodBarras"));
        pData.add(tCodBarras);
        cCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder("Categoria"));
        pData.add(cCategoria);
        tQuantidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Quantidade"));
        tQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        tQuantidade.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pData.add(tQuantidade);
        tValorCusto.setBorder(javax.swing.BorderFactory.createTitledBorder("ValorCusto"));
        tValorCusto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        tValorCusto.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pData.add(tValorCusto);
        tValorVenda.setBorder(javax.swing.BorderFactory.createTitledBorder("ValorVenda"));
        tValorVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        tValorVenda.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pData.add(tValorVenda);
        getContentPane().add(pData, java.awt.BorderLayout.NORTH);
        pFoto.setLayout(new java.awt.BorderLayout());
        lFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pFoto.add(lFoto, java.awt.BorderLayout.CENTER);
        pFotoButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        bFotoPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_paste-16.png"))); // NOI18N
        bFotoPaste.setText("Colar da Área de Transferência");
        bFotoPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoPasteActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoPaste);
        bFotoSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_export-16.png"))); // NOI18N
        bFotoSave.setText("Salvar Imagem");
        bFotoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoSaveActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoSave);
        bFotoRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_delete-16.png"))); // NOI18N
        bFotoRemove.setText("Remover Imagem");
        bFotoRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoRemoveActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoRemove);
        pFoto.add(pFotoButtons, java.awt.BorderLayout.PAGE_END);
        tbData.addTab("Foto", new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_insert_image-16.png")), pFoto); // NOI18N
        getContentPane().add(tbData, java.awt.BorderLayout.CENTER);
        pButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        bOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-accept-16.png"))); // NOI18N
        bOk.setMnemonic('O');
        bOk.setText("Ok");
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pButtons.add(bOk);
        bCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-cancel-16.png"))); // NOI18N
        bCancel.setMnemonic('C');
        bCancel.setText("Cancelar");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pButtons.add(bCancel);
        getContentPane().add(pButtons, java.awt.BorderLayout.SOUTH);
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-800)/2, (screenSize.height-600)/2, 800, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        String fieldError =validateForm();
        if(fieldError.length()==0) {
            form2obj();
            this.setVisible(false);
            this.dispose();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Verifique os campos seguintes e tente novamente!\n"+fieldError,"Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bOkActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        produto = null;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed


    //Foto
    private void bFotoPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoPasteActionPerformed
        try {
            form2obj();
            produto.setFoto(new javax.swing.ImageIcon((java.awt.Image)java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null).getTransferData(java.awt.datatransfer.DataFlavor.imageFlavor)),200);
            obj2form();
        } catch(java.awt.datatransfer.UnsupportedFlavorException e){
            javax.swing.JOptionPane.showMessageDialog(this, "O Conteúdo da Área de Transferência Inválido!","Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch(java.io.IOException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Erro de E / S !","Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch(java.awt.HeadlessException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Recurso de Área de Transferência não suportada!","Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bFotoPasteActionPerformed
    private void bFotoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoSaveActionPerformed
        javax.swing.JFileChooser browser = new javax.swing.JFileChooser();
        browser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        browser.setMultiSelectionEnabled(false);
        browser.setFileFilter(
            new javax.swing.filechooser.FileFilter() {
                @Override
                public String getDescription() {
                    return "PNG - Portable Network Graphics (*.png)";
                }
                @Override
                public boolean accept(java.io.File file) {
                    if(file.getName().endsWith(".png") || file.isDirectory()) return true;
                    else return false;
                }
            }
        );
        if (browser.showSaveDialog(this)==javax.swing.JFileChooser.CANCEL_OPTION || browser.getSelectedFile().getName().isEmpty()) return;
        String pathFile = browser.getSelectedFile().getAbsolutePath();
        try {
            if(!browser.getSelectedFile().getName().isEmpty()) {
                form2obj();
                if(!pathFile.toUpperCase().endsWith(".PNG")) pathFile +=".png";
                produto.saveFoto(pathFile, "PNG");
            }
        } catch (java.io.IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this,"Arquivo inválido !");
        }
    }//GEN-LAST:event_bFotoSaveActionPerformed
    private void bFotoRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoRemoveActionPerformed
        if(javax.swing.JOptionPane.showConfirmDialog(this, "Deseja remover a imagem?","Questão",javax.swing.JOptionPane.OK_CANCEL_OPTION)==javax.swing.JOptionPane.OK_OPTION) {
            lFoto.setIcon(new javax.swing.ImageIcon());
        }
    }//GEN-LAST:event_bFotoRemoveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        bCancelActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bOk;
    private javax.swing.JPanel pButtons;
    private javax.swing.JPanel pData;
    private javax.swing.JTabbedPane tbData;
    private javax.swing.JLabel tId;
    private javax.swing.JFormattedTextField tNome;
    private javax.swing.JFormattedTextField tCodBarras;
    private javax.swing.JComboBox cCategoria;
    private javax.swing.JFormattedTextField tQuantidade;
    private javax.swing.JFormattedTextField tValorCusto;
    private javax.swing.JFormattedTextField tValorVenda;
    private javax.swing.JButton bFotoPaste;
    private javax.swing.JButton bFotoRemove;
    private javax.swing.JButton bFotoSave;
    private javax.swing.JLabel lFoto;
    private javax.swing.JPanel pFoto;
    private javax.swing.JPanel pFotoButtons;
    // End of variables declaration//GEN-END:variables
}
