package cliente;

/**
 *
 * @author JSQLGen
 */
public class ClienteForm extends javax.swing.JDialog {

    private final java.sql.Connection connection;
    private Cliente cliente;

    /**
     * Construtor do form ClienteForm
     *
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param cliente Objeto a ser editado
     */
    public ClienteForm(java.awt.Window parent, java.sql.Connection connection, Cliente cliente) {
        super(parent);
        this.connection = connection;
        this.cliente = cliente;
        initComponents();
        obj2form();
        this.setVisible(true);
    }

    /**
     * Exibe caixa de diálogo para preenchimento dos campos
     *
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param cliente Objeto a ser editado
     * @return the cliente
     */
    public static Cliente showInputDialog(java.awt.Window parent, java.sql.Connection connection, Cliente cliente) {
        return new ClienteForm(parent, connection, cliente).cliente;
    }

    /**
     * Transfere os dados do objeto para o formulário
     */
    private void obj2form() {
        tId.setText(cliente.getId() == null ? "" : cliente.getId().toString());
        tNome.setText(cliente.getNome() == null ? "" : cliente.getNome());
        tCpf.setText(cliente.getCpf());
        tNascimento.setText(cliente.getNascimentoF("dd/MM/yyyy"));
        tTelFixo.setText(cliente.getTelFixo());
        tTelCelular.setText(cliente.getTelCelular());
        tEmail.setText(cliente.getEmail());
        lFoto.setIcon(cliente.getFoto());
    }

    /**
     * Transfere os dados do formulário para o objeto
     */
    private void form2obj() {
        cliente.setId(tId.getText());
        cliente.setNome(tNome.getText());
        cliente.setCpf(tCpf.getText());
        cliente.setNascimentoF("dd/MM/yyyy", tNascimento.getText());
        cliente.setTelFixo(tTelFixo.getText());
        cliente.setTelCelular(tTelCelular.getText());
        cliente.setEmail(tEmail.getText());
        cliente.setFoto((javax.swing.ImageIcon) lFoto.getIcon(), 200);
    }

    /**
     * valida os dados do formulário
     */
    private String validateForm() {
        String fieldError = "";
        if (tNome.getText().length() < 1) {
            fieldError += "Nome\n";
        }
        if (tCpf.getText().length() < 1) {
            fieldError += "Cpf\n";
        }
        if (tTelFixo.getText().length() < 1) {
            fieldError += "TelFixo\n";
        }
        if (tTelCelular.getText().length() < 1) {
            fieldError += "TelCelular\n";
        }
        if (tEmail.getText().length() < 1) {
            fieldError += "Email\n";
        }
        return fieldError;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tId = new javax.swing.JLabel();
        pData = new javax.swing.JPanel();
        tNome = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        tCpf = new javax.swing.JFormattedTextField();
        tNascimento = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        tTelFixo = new javax.swing.JFormattedTextField();
        tTelCelular = new javax.swing.JFormattedTextField();
        tEmail = new javax.swing.JFormattedTextField();
        tbData = new javax.swing.JTabbedPane();
        pFoto = new javax.swing.JPanel();
        lFoto = new javax.swing.JLabel();
        pFotoButtons = new javax.swing.JPanel();
        bFotoPaste = new javax.swing.JButton();
        bFotoSave = new javax.swing.JButton();
        bFotoLoad = new javax.swing.JButton();
        bFotoRemove = new javax.swing.JButton();
        pButtons = new javax.swing.JPanel();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();

        tId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tId.setBorder(javax.swing.BorderFactory.createTitledBorder("Id"));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulário de Cliente");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pData.setLayout(new java.awt.GridLayout(4, 0));

        tNome.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));
        pData.add(tNome);

        jPanel1.setLayout(new java.awt.GridLayout());

        tCpf.setBorder(javax.swing.BorderFactory.createTitledBorder("CPF"));
        try {
            tCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(tCpf);

        tNascimento.setBorder(javax.swing.BorderFactory.createTitledBorder("Data de Nascimento"));
        try {
            tNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(tNascimento);

        pData.add(jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout());

        tTelFixo.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefone Fixo"));
        try {
            tTelFixo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(tTelFixo);

        tTelCelular.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefone Celular"));
        try {
            tTelCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)*####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(tTelCelular);

        pData.add(jPanel2);

        tEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("E-mail"));
        pData.add(tEmail);

        getContentPane().add(pData, java.awt.BorderLayout.NORTH);

        pFoto.setLayout(new java.awt.BorderLayout());

        lFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pFoto.add(lFoto, java.awt.BorderLayout.CENTER);

        pFotoButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        bFotoPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_paste-16.png"))); // NOI18N
        bFotoPaste.setText("Colar da Área de Transferência");
        bFotoPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoPasteActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoPaste);

        bFotoSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_export-16.png"))); // NOI18N
        bFotoSave.setText("Salvar Imagem");
        bFotoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoSaveActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoSave);

        bFotoLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_open-16.png"))); // NOI18N
        bFotoLoad.setText("Carregar Imagem");
        bFotoLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoLoadActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoLoad);

        bFotoRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_delete-16.png"))); // NOI18N
        bFotoRemove.setText("Remover Imagem");
        bFotoRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoRemoveActionPerformed(evt);
            }
        });
        pFotoButtons.add(bFotoRemove);

        pFoto.add(pFotoButtons, java.awt.BorderLayout.PAGE_END);

        tbData.addTab("Foto", new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_insert_image-16.png")), pFoto); // NOI18N

        getContentPane().add(tbData, java.awt.BorderLayout.CENTER);

        pButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-accept-16.png"))); // NOI18N
        bOk.setMnemonic('O');
        bOk.setText("Ok");
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pButtons.add(bOk);

        bCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-cancel-16.png"))); // NOI18N
        bCancel.setMnemonic('C');
        bCancel.setText("Cancelar");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pButtons.add(bCancel);

        getContentPane().add(pButtons, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(800, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        String fieldError = validateForm();
        if (fieldError.length() == 0) {
            form2obj();
            this.setVisible(false);
            this.dispose();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Verifique os campos seguintes e tente novamente!\n" + fieldError, "Aviso", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bOkActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        cliente = null;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    //Foto
    private void bFotoPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoPasteActionPerformed
        try {
            form2obj();
            cliente.setFoto(new javax.swing.ImageIcon((java.awt.Image) java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null).getTransferData(java.awt.datatransfer.DataFlavor.imageFlavor)), 200);
            obj2form();
        } catch (java.awt.datatransfer.UnsupportedFlavorException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "O Conteúdo da Área de Transferência Inválido!", "Aviso", javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (java.io.IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Erro de E / S !", "Aviso", javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (java.awt.HeadlessException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Recurso de Área de Transferência não suportada!", "Aviso", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bFotoPasteActionPerformed
    private void bFotoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoSaveActionPerformed
        javax.swing.JFileChooser browser = new javax.swing.JFileChooser();
        browser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        browser.setMultiSelectionEnabled(false);
        browser.setFileFilter(
                new javax.swing.filechooser.FileFilter() {
                    @Override
                    public String getDescription() {
                        return "PNG - Portable Network Graphics (*.png)";
                    }

                    @Override
                    public boolean accept(java.io.File file) {
                        if (file.getName().endsWith(".png") || file.isDirectory()) {
                            return true;
                        } else {
                            return false;
                        }
                    }
                }
        );
        if (browser.showSaveDialog(this) == javax.swing.JFileChooser.CANCEL_OPTION || browser.getSelectedFile().getName().isEmpty()) {
            return;
        }
        String pathFile = browser.getSelectedFile().getAbsolutePath();
        try {
            if (!browser.getSelectedFile().getName().isEmpty()) {
                form2obj();
                if (!pathFile.toUpperCase().endsWith(".PNG")) {
                    pathFile += ".png";
                }
                cliente.saveFoto(pathFile, "PNG");
            }
        } catch (java.io.IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Arquivo inválido !");
        }
    }//GEN-LAST:event_bFotoSaveActionPerformed
    private void bFotoRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoRemoveActionPerformed
        if (javax.swing.JOptionPane.showConfirmDialog(this, "Deseja remover a imagem?", "Questão", javax.swing.JOptionPane.OK_CANCEL_OPTION) == javax.swing.JOptionPane.OK_OPTION) {
            lFoto.setIcon(new javax.swing.ImageIcon());
        }
    }//GEN-LAST:event_bFotoRemoveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        bCancelActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void bFotoLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoLoadActionPerformed
        javax.swing.JFileChooser browser = new javax.swing.JFileChooser();
        browser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        browser.setMultiSelectionEnabled(false);
        if (browser.showOpenDialog(this) == javax.swing.JFileChooser.CANCEL_OPTION || browser.getSelectedFile().getName().isEmpty()) {
            return;
        }
        String pathFile = browser.getSelectedFile().getAbsolutePath();

        if (!browser.getSelectedFile().getName().isEmpty()) {
            cliente.loadFoto(pathFile);
            cliente.setFoto(cliente.getFoto(), 200);
            obj2form();
        }

    }//GEN-LAST:event_bFotoLoadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bFotoLoad;
    private javax.swing.JButton bFotoPaste;
    private javax.swing.JButton bFotoRemove;
    private javax.swing.JButton bFotoSave;
    private javax.swing.JButton bOk;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lFoto;
    private javax.swing.JPanel pButtons;
    private javax.swing.JPanel pData;
    private javax.swing.JPanel pFoto;
    private javax.swing.JPanel pFotoButtons;
    private javax.swing.JFormattedTextField tCpf;
    private javax.swing.JFormattedTextField tEmail;
    private javax.swing.JLabel tId;
    private javax.swing.JFormattedTextField tNascimento;
    private javax.swing.JFormattedTextField tNome;
    private javax.swing.JFormattedTextField tTelCelular;
    private javax.swing.JFormattedTextField tTelFixo;
    private javax.swing.JTabbedPane tbData;
    // End of variables declaration//GEN-END:variables
}
