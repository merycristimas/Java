package animal;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author cta
 */
public class AnimalTab extends javax.swing.JDialog {

    private final Session session;
    private final List<Animal> lista;

    /**
     *
     * @param parent
     * @param session
     */
    public AnimalTab(java.awt.Window parent, Session session) {
        super(parent);
        this.session = session;
        this.lista = new ArrayList<>();
        initComponents();
        refresh();
        this.setVisible(true);
    }
    
    
    /**
     * Chama o diálogo
     * @param parent
     * @param session 
     */
    public static void showDialog(java.awt.Window parent, Session session){
        new AnimalTab(parent, session);
        
    }

    /**
     * Atualiza Tabela
     */
    private void refresh() {
        //Remove todos os elementos da lista
        lista.removeAll(lista);

        //Obtem uma lista de animals do banco de dados 
        lista.addAll(AnimalDAO.loadList(session));

        //Obtem o modelo da tabela para edição
        DefaultTableModel mTabela = (DefaultTableModel) tTabela.getModel();

        //Remove todas as tinhas da tabela
        while (mTabela.getRowCount() > 0) {//Enquanto a contagem de linhas for > que 0
            mTabela.removeRow(0);//Remove linha 0

        }

        //Adiciona linahs na tabela 
        for (Animal c : lista) {
            List linha = new ArrayList();
            linha.add(c.getId());
            linha.add(c.getIdentificacao());
            linha.add(c.getNascimento("dd/MM/yyyy"));
            linha.add(c.getGenero());
            linha.add(c.getEspecie());
            linha.add(c.getOrigem());
            linha.add(c.getCategoria());
            linha.add(c.getPai());
            linha.add(c.getMae());
            linha.add(c.getRaca());
            linha.add(c.getObservacao());
            mTabela.addRow(linha.toArray());//Adiciona linha na tabela 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pTabela = new javax.swing.JPanel();
        sTabela = new javax.swing.JScrollPane();
        tTabela = new javax.swing.JTable();
        pBotoes = new javax.swing.JPanel();
        bInserir = new javax.swing.JButton();
        bEditar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        pTabela.setLayout(new java.awt.BorderLayout());

        tTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Identificação", "Nascimento", "Genero", "Raça", "Especie", "Origem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sTabela.setViewportView(tTabela);

        pTabela.add(sTabela, java.awt.BorderLayout.CENTER);

        getContentPane().add(pTabela, java.awt.BorderLayout.CENTER);

        bInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock_new-16.png"))); // NOI18N
        bInserir.setMnemonic('I');
        bInserir.setText("Inserir");
        bInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInserirActionPerformed(evt);
            }
        });
        pBotoes.add(bInserir);

        bEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock_open-16.png"))); // NOI18N
        bEditar.setMnemonic('E');
        bEditar.setText("Editar");
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });
        pBotoes.add(bEditar);

        bExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock_calc-cancel-16.png"))); // NOI18N
        bExcluir.setMnemonic('x');
        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });
        pBotoes.add(bExcluir);

        getContentPane().add(pBotoes, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(673, 485));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInserirActionPerformed
        Animal c = new Animal();//Instancia novo animal
        c = AnimalForm.showDialog(this, c);//Exibe o formulario
        if (c != null) {//Se o objeto editado não for nulo
            AnimalDAO.save(session, c);//Salva
            refresh();//Atualiza tabela 
        }
    }//GEN-LAST:event_bInserirActionPerformed

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        Animal c = lista.get(tTabela.getSelectedRow());//Obtem animal da lista
        c = AnimalForm.showDialog(this, c);//Exibe o formulario
        if (c != null) {//Se o objeto editado não for nulo
            AnimalDAO.save(session, c);//Salva
            refresh();//Atualiza tabela 
        }

    }//GEN-LAST:event_bEditarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        Animal c = lista.get(tTabela.getSelectedRow());//Obtem animal da lista
        Integer resposta = JOptionPane.showConfirmDialog(this, "Deseja excluir o animal" + c.getIdentificacao() + "?");
        if (resposta == JOptionPane.YES_OPTION) {
            AnimalDAO.delete(session, c);
            refresh();
        }
    }//GEN-LAST:event_bExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bInserir;
    private javax.swing.JPanel pBotoes;
    private javax.swing.JPanel pTabela;
    private javax.swing.JScrollPane sTabela;
    private javax.swing.JTable tTabela;
    // End of variables declaration//GEN-END:variables
}
