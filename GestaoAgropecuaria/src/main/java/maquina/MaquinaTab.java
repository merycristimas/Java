package maquina;

import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;



/**
 *
 * @author cta17
 */
public class MaquinaTab extends javax.swing.JDialog {
    
    private final Session session;

    private final List<Maquina> lista;

    /**
     * Creates new form MaquinaTab
     */
    public MaquinaTab(java.awt.Frame parent, Session session) {
        super(parent);this.session = session;
        this.lista = new ArrayList<>();
        initComponents();
        refresh();
        this.setVisible(true);
        
    }

    public static void showDialog(java.awt.Window parent, Session session){
        MaquinaTab maquinaTab = new MaquinaTab(session);
    }

    private MaquinaTab(Session session) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    

   
    
    private void refresh() {
        //limpa a lista
        lista.removeAll(lista);
        //obtem uma lista de maquinas no bd
        lista.addAll(MaquinaDAO.loadList(session));

        //obtem o modelo da tabela para ediçãio
        DefaultTableModel mTabela = (DefaultTableModel) tTabela.getModel();

        //remove todas as linhas da tabela
        while (mTabela.getRowCount() > 0) { //equanto a contagem de linha for maior q zero
            mTabela.removeRow(0); //remove a linha 0
        }
        //adciona linhas na tabela
        for (Maquina c : lista) {
            List linha = new ArrayList();
            linha.add(c.getId());
            linha.add(c.getMaquina());
            linha.add(c.getDescricao());
            linha.add(c.getVidaUtil());
            linha.add(c.getDataCompra("dd/MM/yyyy"));
            linha.add(c.getValorCompra());
            linha.add(c.getAbrigo());
            linha.add(c.getManutencao());
            linha.add(c.getLubrificacao());
            mTabela.addRow(linha.toArray()); 

        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sTabela = new javax.swing.JScrollPane();
        tTabela = new javax.swing.JTable();
        pBotoes = new javax.swing.JPanel();
        pInserir = new javax.swing.JButton();
        bEditar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Máquina", "Descrição", "Vida Útil (horas)", "Data Compra", "Valor Compra", "Abrigo %", "Manutenção %", "Lubrificação %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sTabela.setViewportView(tTabela);
        if (tTabela.getColumnModel().getColumnCount() > 0) {
            tTabela.getColumnModel().getColumn(0).setMinWidth(0);
            tTabela.getColumnModel().getColumn(0).setPreferredWidth(0);
            tTabela.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        getContentPane().add(sTabela, java.awt.BorderLayout.CENTER);

        pInserir.setMnemonic('A');
        pInserir.setText("Adicionar");
        pInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pInserirActionPerformed(evt);
            }
        });

        bEditar.setMnemonic('E');
        bEditar.setText("Editar");
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });

        bExcluir.setMnemonic('x');
        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pBotoesLayout = new javax.swing.GroupLayout(pBotoes);
        pBotoes.setLayout(pBotoesLayout);
        pBotoesLayout.setHorizontalGroup(
            pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 755, Short.MAX_VALUE)
            .addGroup(pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pBotoesLayout.createSequentialGroup()
                    .addGap(0, 242, Short.MAX_VALUE)
                    .addComponent(pInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addComponent(bEditar)
                    .addGap(5, 5, 5)
                    .addComponent(bExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 243, Short.MAX_VALUE)))
        );
        pBotoesLayout.setVerticalGroup(
            pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
            .addGroup(pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pBotoesLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pInserir)
                        .addComponent(bEditar)
                        .addComponent(bExcluir))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(pBotoes, java.awt.BorderLayout.SOUTH);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pInserirActionPerformed
        Maquina c = new Maquina();              //instancia novo maquina
        c = MaquinaForm.showDialog(this, c);    //exibe o formulario
        if (c != null) {                            //se o objeto editado n fo rnulo
            MaquinaDAO.save(session, c);         //salva
            refresh();                          //atualiza tabela
        }
    }//GEN-LAST:event_pInserirActionPerformed

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        Maquina c = lista.get(tTabela.getSelectedRow()); //instancia novo maquina

        c = MaquinaForm.showDialog(this, c);    //exibe o formulario
        if (c != null) {                            //se o objeto editado n fo rnulo
            MaquinaDAO.save(session, c);         //salva
            refresh();                          //atualiza tabela
        }
    }//GEN-LAST:event_bEditarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        Maquina c = lista.get(tTabela.getSelectedRow());
        Integer resposta = JOptionPane.showConfirmDialog(this, "Deseja excluir o maquina " + c.getMaquina() + "?");
        if (resposta == JOptionPane.YES_OPTION) {
            MaquinaDAO.delete(session, c);
            refresh();
        }
    }//GEN-LAST:event_bExcluirActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JPanel pBotoes;
    private javax.swing.JButton pInserir;
    private javax.swing.JScrollPane sTabela;
    private javax.swing.JTable tTabela;
    // End of variables declaration//GEN-END:variables
}
