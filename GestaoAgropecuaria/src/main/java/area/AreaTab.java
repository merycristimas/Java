package area;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author cta
 */
public class AreaTab extends javax.swing.JDialog {

    private final Session session;
    private final List<Area> lista;

    /**
     * Creates new form AreaTab
     *
     * @param parent
     * @param session
     */
    public AreaTab(java.awt.Window parent, Session session) {
        super(parent);
        this.session = session;
        this.lista = new ArrayList<>();
        initComponents();
        refresh();
        this.setVisible(true);
    }

    /**
     * Chama o diálogo
     * @param parent
     * @param session 
     */
    public static void showDialog(java.awt.Window parent, Session session) {
        new AreaTab(parent, session);
    }

    /**
     * Atualiza tabela
     */
    private void refresh() {
        //Remove todos os elementos da lista
        lista.removeAll(lista);
        //Obtem uma lista de areas do banco de dados
        lista.addAll(AreaDAO.loadList(session));

        //Obtem o modelo da tabela para edição
        DefaultTableModel mTabela = (DefaultTableModel) tTabela.getModel();

        //Remove todas as linhas da tabela
        while (mTabela.getRowCount() > 0) { //Enquanto a contagem de linhas for > que 0
            mTabela.removeRow(0); //Remove linha 0
        }

        //Adiciona linhas na tabela
        for (Area c : lista) {
            List linha = new ArrayList(); //Instancia nova linha
            //Define os valores para a linha
            linha.add(c.getId());
            linha.add(c.getNome());
            linha.add(c.getArea());
            linha.add(c.getUnidade());
            linha.add(c.getTipo());
            mTabela.addRow(linha.toArray()); //Adiciona linha na tabela
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pTabela = new javax.swing.JPanel();
        sTabela = new javax.swing.JScrollPane();
        tTabela = new javax.swing.JTable();
        pBotoes = new javax.swing.JPanel();
        bInserir = new javax.swing.JButton();
        bEditar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        pTabela.setLayout(new java.awt.BorderLayout());

        tTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Area", "Tipo", "Unidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sTabela.setViewportView(tTabela);

        pTabela.add(sTabela, java.awt.BorderLayout.CENTER);

        getContentPane().add(pTabela, java.awt.BorderLayout.CENTER);

        bInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock_new-16.png"))); // NOI18N
        bInserir.setMnemonic('I');
        bInserir.setText("Inserir");
        bInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInserirActionPerformed(evt);
            }
        });
        pBotoes.add(bInserir);

        bEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock_open-16.png"))); // NOI18N
        bEditar.setMnemonic('E');
        bEditar.setText("Editar");
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });
        pBotoes.add(bEditar);

        bExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock_delete-16.png"))); // NOI18N
        bExcluir.setMnemonic('X');
        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });
        pBotoes.add(bExcluir);

        getContentPane().add(pBotoes, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(646, 442));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInserirActionPerformed
        Area c = new Area();           //Instancia novo area
        c = AreaForm.showDialog(this, c); //Exibe o formulário
        if (c != null) {                         //Se o objeto editado não for nulo
            AreaDAO.save(session, c);     //Salva
            refresh();                       //Atualiza tabela
        }
    }//GEN-LAST:event_bInserirActionPerformed

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        Area c = lista.get(tTabela.getSelectedRow()); //Obtém area da lista
        c = AreaForm.showDialog(this, c); //Exibe o formulário
        if (c != null) {                     //Se o objeto editado não for nulo
            AreaDAO.save(session, c);     //Salva
            refresh();                       //Atualiza tabela
        }
    }//GEN-LAST:event_bEditarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        Area c = lista.get(tTabela.getSelectedRow()); //Obtém area da lista
        Integer resposta = JOptionPane.showConfirmDialog(this, "Deseja excluir o area " + c.getNome() + "?");
        if (resposta == JOptionPane.YES_OPTION) {
            AreaDAO.delete(session, c);
            refresh();
        }

    }//GEN-LAST:event_bExcluirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bInserir;
    private javax.swing.JPanel pBotoes;
    private javax.swing.JPanel pTabela;
    private javax.swing.JScrollPane sTabela;
    private javax.swing.JTable tTabela;
    // End of variables declaration//GEN-END:variables
}
